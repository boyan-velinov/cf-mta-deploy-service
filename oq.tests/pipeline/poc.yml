---
jobs:
- name: build-docker-image
  public: true
  serial: true
  plan:
  - aggregate: 
    - get: cf-mta-deploy-service-git-repo
      trigger: true
    - get: cf-mta-cli-plugin-git-repo
      trigger: true
  - task: prepare-docker-context
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository:  cloudfoundry/cli-ci}
      run:
        path: 'bash'
#        args: ["oq-test-git-repo/oq.tests/pipeline/generate_timestamp.sh","ts/tag"]
        args: ["oq-test-git-repo/oq.tests/pipeline/prepare-docker-context.sh","cf-mta-cli-plugin-git-repo","github.com/SAP/cf-mta-plugin","oq-test-git-repo/oq.tests","output/context"]
      inputs:
      - name: cf-mta-deploy-service-git-repo
        path: "oq-test-git-repo"
      - name: cf-mta-cli-plugin-git-repo
        path: "cf-mta-cli-plugin-git-repo"
      outputs:
      - name: "docker-context"
        path: "output"
  - put: test-environment-image
    params:
      build: docker-context/context
      tag_as_latest: true
- name: run-test
  plan:
  - aggregate: 
    - get: cf-mta-deploy-service-git-repo
      trigger: false #should we run the OQs for each change in the test's code?
      passed: [build-docker-image]
    - get: cf-mta-cli-plugin-git-repo
      trigger: false #should we run the OQs for each change in the client?
      passed: [build-docker-image]
    - get: test-environment-image
      trigger: true # Well, let's run whenever a new test content image is created :)
      passed: [build-docker-image]
      params:
        tag: latest
  - task: test-substep-1
    image: test-environment-image
    config:
      platform: linux
      run:
        path: 'bash'
        args: ["/workspace/test_scenarios/CF Tests/CF Canary Tests/Sanity Check/run.sh"]
      params:
        TEST_WORKING_DIRECTORY: "/workspace"
        DEFAULT_ORG: ((DEFAULT_ORG))
        DEFAULT_SPACE: ((DEFAULT_SPACE))
        DEPLOY_SERVICE_HOST: ((DEPLOY_SERVICE_HOST))
        DEPLOY_SERVICE_URL: ((DEPLOY_SERVICE_URL))
        ORG_NAME: ((ORG_NAME))
        SPACE_NAME: ((SPACE_NAME))
        RT_API_ENDPOINT: ((RT_API_ENDPOINT))
        USER_NAME: ((USER_NAME))
        USER_PASS: ((USER_PASS))

resources:
- name: cf-mta-deploy-service-git-repo
  type: git
  source:
    uri: https://github.com/ddonchev/cf-mta-deploy-service.git
    branch: oq_poc
    skip_ssl_verification: true
- name: cf-mta-cli-plugin-git-repo
  type: git
  source:
     uri: https://github.com/ddonchev/cf-mta-plugin.git
     branch: master
     skip_ssl_verification: true
- name: test-environment-image
  type: docker-image
  source:
     repository: registry:5000/mta-test-image
     insecure_registries: [ "registry:5000" ]
